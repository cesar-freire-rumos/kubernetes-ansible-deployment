- name: Install and configure Kubeadm kubernetes on ubuntu server
  hosts: localhost
  connection: local
  gather_facts: false
  become: yes
  vars:
    user: ubuntu 

  tasks:

  - name: Set timezone to Europe/Lisbon
    ansible.builtin.timezone:
      name: Europe/Lisbon

  - name: Update and Upgrade Ubuntu
    apt:
      upgrade: dist
      force_apt_get: yes
      update_cache: yes
      autoremove: yes
      cache_valid_time: "432000"

  - name: Install common ssh_key
    ansible.builtin.authorized_key:
      user: "{{ user }}"
      state: present
      key: "{{ lookup('file', 'id_rsa.pub') }}"

  - name: Copy ssh private and public key
    ansible.builtin.copy:
      src: "{{ item }}"
      dest: /home/{{ user }}/.ssh/
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: '0600'
    with_items:
    - id_rsa
    - id_rsa.pub

  - name: Installing requirements packages and tools
    apt:
      install_recommends: no
      force_apt_get: yes
      name: "{{ packages }}"
    vars:
      packages:
        - apt-transport-https
        - ca-certificates
        - software-properties-common
        - vim
        - curl
        - containerd
      
  - name: Add kubernetes.io signing key
    apt_key:
      url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
      state: present

  - name: Add kubernetes repository into sources list
    apt_repository:
      repo: "deb https://apt.kubernetes.io/ kubernetes-xenial main"
      state: present
      filename: kubernetes-xenial
      update_cache: "true"

  - name: Install kubernetes
    apt:
      update_cache: yes
      pkg:
      - kubelet 
      - kubeadm 
      - kubectl
    
  - name: Load k8s net modules
    ansible.builtin.copy:
      dest: "/etc/modules-load.d/k8s.conf"
      content: |
        overlay
        br_netfilter

  - name: modprobe net modules
    ansible.builtin.command: 
      modprobe overlay && modprobe br_netfilter

  - name: sysctl params required by setup, params persist across reboots
    ansible.builtin.copy:
      dest: "/etc/sysctl.d/k8s.conf"
      content: |
        net.bridge.bridge-nf-call-iptables  = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.ipv4.ip_forward                 = 1

  - name: Apply sysctl params
    ansible.builtin.command: 
     sysctl --system

  - name: Update k8s images
    ansible.builtin.command: 
      kubeadm config images pull

  - name: Kubernetes init
    ansible.builtin.command: 
      kubeadm init

  - name: Export KUBECONFIG
    blockinfile:
    dest: "/root/.bashrc"
    block: |
      export KUBECONFIG=/etc/kubernetes/admin.conf
    marker: '# {mark} ANSIBLE MANAGED BLOCK'
    insertbefore: BOF
    create: yes 

