- name: Install kubernetes on controller node (ubuntu)
  hosts: localhost
  connection: local
  gather_facts: false
  become: yes
  vars:
    user: ubuntu 

  tasks:

  - name: Set timezone to Europe/Lisbon
    ansible.builtin.timezone:
      name: Europe/Lisbon

  - name: Update and Upgrade Ubuntu
    apt:
      upgrade: dist
      force_apt_get: yes
      update_cache: yes
      autoremove: yes
      cache_valid_time: "432000"

  - name: Install common ssh_key
    ansible.builtin.authorized_key:
      user: "{{ user }}"
      state: present
      key: "{{ lookup('file', 'id_rsa.pub') }}"

  - name: Copy ssh private and public key
    ansible.builtin.copy:
      src: "{{ item }}"
      dest: /home/{{ user }}/.ssh/
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: '0600'
    with_items:
    - id_rsa
    - id_rsa.pub

  - name: Disable SWAP since kubernetes can't work with swap enabled (1/2)
    ansible.builtin.command: swapoff -a

  - name: Disable SWAP in fstab since kubernetes can't work with swap (2/2)
    ansible.builtin.replace:
      path: /etc/fstab
      regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
      replace: '# \1'


  - name: Installing add-on packages and tools
    apt:
      install_recommends: no
      force_apt_get: yes
      name: "{{ packages }}"
    vars:
      packages:
        - apt-transport-https
        - ca-certificates
        - software-properties-common
        - vim
        - curl

  - name: Install Microk8s
    shell: snap install microk8s --classic 

  - name: Wait for port 16443 to become open on the host
    ansible.builtin.wait_for:
      port: 16443
      delay: 10

  - name: Adding user to microk8s group
    user: name={{ user }}
          groups=microk8s
          append=yes

  - name: Add alias kubectl
    blockinfile:
      insertafter: EOF
      path: /home/{{ user }}/.bashrc
      block: | 
        alias kubectl="microk8s kubectl"

  - name: Add new node
    ansible.builtin.shell: microk8s add-node
    register: token

  - name: Print resister token
    ansible.builtin.debug:
      msg: "{{ token.stdout }}"

      